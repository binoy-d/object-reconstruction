{"version":3,"sources":["components/LandingSection.js","App.js","reportWebVitals.js","index.js"],"names":["Model","props","obj","useLoader","OBJLoader","process","TextureLoader","colorMap","position","object","map","rotation","ModelViewer","className","fallback","args","OrbitControls","Environment","preset","background","LandingSection","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAMO,SAASA,EAAMC,GACpB,IAAMC,EAAMC,YAAUC,IAAWC,0CACjC,EAAmBF,YAAUG,IAAe,CAAED,2CAAvCE,EAAP,oBACA,OAAO,2BACGC,SAAU,EAAE,IAAK,IAAK,IACtBC,OAAQP,EACRQ,IAAKH,EACLI,SAAU,EAAE,KAAM,GAAI,KAG3B,SAASC,IACd,OACE,qBAAKC,UAAU,mBAAf,SACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUC,SAAU,KAApB,UACI,8BAAcC,KAAM,CAAC,WACrB,4BAAYA,KAAM,CAAC,WACnB,cAACf,EAAD,IACA,cAACgB,EAAA,EAAD,IACF,cAACC,EAAA,EAAD,CAAaC,OAAO,OAAOC,YAAU,WAQhC,SAASC,IACpB,OACI,kCACI,sBAAKP,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,oBAAIA,UAAU,QAAd,0CAGR,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,cAACD,EAAD,a,MCjCTS,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACC,cAACO,EAAD,OCMUE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba2f389c.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport { Canvas, useLoader } from \"@react-three/fiber\";\r\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\r\nimport { Environment, OrbitControls} from \"@react-three/drei\";\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\r\n\r\nexport function Model(props) {\r\n  const obj = useLoader(OBJLoader, process.env.PUBLIC_URL + \"/files/final.obj\");\r\n  const [colorMap] = useLoader(TextureLoader, [ process.env.PUBLIC_URL + \"/files/final.png\"])\r\n  return <primitive \r\n            position={[-10, -10, -30]} \r\n            object={obj} \r\n            map={colorMap}\r\n            rotation={[-1.49, 0, -2]} />;\r\n}\r\n\r\nexport function ModelViewer() {\r\n  return (\r\n    <div className=\"canvas-container\">\r\n      <Canvas>\r\n        <Suspense fallback={null}>\r\n            <ambientLight args={[0x404040]} />\r\n            <pointLight args={[0x404040]} />\r\n            <Model />\r\n            <OrbitControls />\r\n          <Environment preset=\"park\" background />\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n} \r\n\r\n\r\nexport default function LandingSection(){\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h1 className=\"title\">3D Object Reconstruction</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <ModelViewer />\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </section>\r\n    );\r\n}","import LandingSection from \"./components/LandingSection\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <LandingSection />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}